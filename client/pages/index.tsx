import styles from "../styles/Home.module.css";
import Head from "next/head";
import axios from "axios";
import cookies from "js-cookie";
import { useRouter } from "next/router";
import { useEffect, useState, useCallback } from "react";
import { UserType } from "../types/user.type";
import { AnswerType } from "../types/answer.type";
import { QuestionType } from "../types/question.type";
import { Header } from "../components/organisms/Header/Header";
import { Statistics } from "../components/molecules/Statistics/Statistics";
import { QuestionWrapper } from "../components/organisms/QuestionWrapper/QuestionWrapper";

const App = () => {
  const router = useRouter();

  const [questions, setQuestions] = useState<QuestionType[] | null>(null);
  const [answers, setAnswers] = useState<AnswerType[] | null>(null);
  const [users, setUsers] = useState<UserType[] | null>(null);

  const fetchQuestions = async () => {
    console.log("fetchQuestions");
    try {
      const headers = {
        authorization: cookies.get("jwt_token"),
      };

      const res = await axios.get(`${process.env.SERVER_URL}/questions`, {
        headers,
      });

      setQuestions(res.data.sortedQuestions);
    } catch (err) {
      console.error("Error fetching questions:", err);
      // @ts-expect-error
      if (err.response.status === 401) {
        router.push("/login");
      }
    }
  };

  const fetchAnswers = async () => {
    console.log("fetchAnswers");
    try {
      const headers = {
        authorization: cookies.get("jwt_token"),
      };

      const res = await axios.get(`${process.env.SERVER_URL}/answers`, {
        headers,
      });

      setAnswers(res.data.sortedAnswers);
    } catch (err) {
      console.error("Error fetching answers:", err);
      // @ts-expect-error
      if (err.response.status === 401) {
        router.push("/login");
      }
    }
  };

  const fetchUsers = async () => {
    console.log("fetchUsers");
    try {
      const headers = {
        authorization: cookies.get("jwt_token"),
      };

      const res = await axios.get(`${process.env.SERVER_URL}/users`, {
        headers,
      });

      setUsers(res.data.users);
    } catch (err) {
      console.error("Error fetching users:", err);
    }
  };

  useEffect(() => {
    fetchQuestions();
    fetchAnswers();
    fetchUsers();
  }, []);

  return (
    <>
      <Head>
        <title>Q-station Community</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <Statistics
        questionCount={questions ? questions.length : 0}
        answerCount={answers ? answers.length : 0}
        userCount={users ? users.length : 0}
      />

      <QuestionWrapper
        questions={questions}
        users={users}
        fetchQuestions={fetchQuestions}
      />
    </>
  );
};

export default App;
